# Benchmark name    Semicolon-separated input data 
simple_id           strings/ab_lines_len1000_100mb.txt
patho1              strings/ab_lines_len1000_100mb.txt
patho2	            strings/ab_lines_len1000_100mb.txt
flip_ab             strings/ab_lines_len1000_100mb.txt
issuu_fallback	    issuu/medium.json
issuu_nofallback    issuu/medium.json
issuu_json2sql      issuu/medium.json
csv2json            csv/csv_format1_250mb.csv
csv2json_nows	    csv/csv_format1_250mb.csv
# json2csv            csv/csv_format1_250mb.csv.csv.ws.json
as                  strings/as_100mb.txt
csv_project3        csv/csv_format1_250mb.csv
email               email/emails_250mb.txt
iso_datetime_to_json datetime/datetimes_250mb.txt
ini2json            ini/inifile_250mb.ini

# Measure the speed of reading and writing lines in C/C++.
# The test reads lines with fgets() and prints it using either
# /two/ calls to fputs(), adding a newline with the second call,
# or /one/ call to fprintf(), using the formatting to add the extra
# newline.  It is, maybe unsurprisingly, faster to do two fputs() than
# to do one fprintf().
raw_io_speed        strings/ab_lines_len1000_250mb.txt
