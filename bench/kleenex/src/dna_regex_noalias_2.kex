/* Takes a FASTA file and counts how often each of the following patterns
   occur in the DNA sequences.

   1. agggtaaa|tttaccct
   2. [cgt]gggtaaa|tttaccc[acg]
   3. a[act]ggtaaa|tttacc[agt]t
   4. ag[act]gtaaa|tttac[agt]ct
   5. agg[act]taaa|ttta[agt]cct
   6. aggg[acg]aaa|ttt[cgt]ccct
   7. agggt[cgt]aa|tt[acg]accct
   8. agggta[cgt]a|t[acg]taccct
   9. agggtaa[cgt]|[acg]ttaccct

   Output is given in unary representation, counting how many matches each of these patterns has.
*/
init >> core1 >> core2 >> core3 >> cleanup

init := filter addCounts

// Filter out sequence identifiers + newlines
filter := (sequenceIdent | ~/\n/ | /./)*

/* for now we ignore the sequence separation */
sequenceIdent := ~/>[^\n]*/

// Add counters for all 9 types at the end of the file
addCounts := "\n"
             "[type 1: ]\n"
             "[type 2: ]\n"
             "[type 3: ]\n"
             "[type 4: ]\n"
             "[type 5: ]\n"
             "[type 6: ]\n"
             "[type 7: ]\n"
             "[type 8: ]\n"
             "[type 9: ]\n"

a := ~/[aA]/
c := ~/[cC]/
g := ~/[gG]/
t := ~/[tT]/

core1 := (seq1 | seq2 | seq3 | /./)*
core2 := (seq4 | seq5 | seq6 | /./)*
core3 := (seq7 | seq8 | seq9 | /./)*

seq1  := (a g g g t a a a | t t t a c c c t) [a <- a "1"] | /type 1: / !a
seq2  := ((c|g|t) g g g t a a a | t t t a c c c (a|c|g)) [b <- b "1"] | /type 2: / !b
seq3  := (a (a|c|t) g g t a a a | t t t a c c (a|g|t) t) [c <- c "1"] | /type 3: / !c
seq4  := (a g (a|c|t) g t a a a | t t t a c (a|g|t) c t) [d <- d "1"] | /type 4: / !d
seq5  := (a g g (a|c|t) t a a a | t t t a (a|g|t) c c t) [e <- e "1"] | /type 5: / !e
seq6  := (a g g g (a|c|g) a a a | t t t (c|g|t) c c c t) [f <- f "1"] | /type 6: / !f
seq7  := (a g g g t (c|g|t) a a | t t (a|c|g) a c c c t) [g <- g "1"] | /type 7: / !g
seq8  := (a g g g t a (c|g|t) a | t (a|c|g) t a c c c t) [h <- h "1"] | /type 8: / !h
seq9  := (a g g g t a a (c|g|t) | (a|c|g) t t a c c c t) [i <- i "1"] | /type 9: / !i

cleanup := ~/[^[]*/ /.*/
